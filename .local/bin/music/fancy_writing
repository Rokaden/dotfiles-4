#!/bin/sh

# script to display system/life/song information
# idea (sort of) inspired by https://github.com/sdushantha/fontpreview

catch_signal_usr1(){
        trap catch_signal_usr1 USR1
        state="update"
        break
}
trap catch_signal_usr1 USR1

main(){
        count=0
        ocycle=0
        mcycle=0
        state="running"
        song=$(mpc current -f "%title%")
        artist=$(mpc current -f "%artist%")
        album=$(mpc current -f "%album%")
        date=$(mpc current -f "%date%")
        now_playing=$(mpc | sed -n 2p | awk '{print $1}')
        [ ! $now_playing ] && other_info
        case $now_playing in
                *paused*) other_info pause ;;
                *) song_info ;;
        esac
}

other_info(){
        [ -f /tmp/fancy_message ] && general="$(head -n1 /tmp/fancy_message)" || general="Hello Dave. You're looking well today."
        # general="‎שּ‎ ‎‎   hi reddit!"
        until [ $state = "update" ]; do
                if [ $1 = "pause" ]; then
                        if [ $count = 20 ]; then
                                count=0
                                [ $mcycle = 1 ] && mcycle=0 || mcycle=`expr $mcycle + 1`
                        fi
                        if [ $mcycle = 0 ]; then
                                message="$general"
                                display_text
                                loop
                        elif [ $mcycle = 1 ]; then
                                message="  $song"
                                display_text
                                loop
                        fi
                else
                        [ $count = 20 ] && count=0
                        message="$general"
                        display_text
                        loop
                fi
        done
        [ -f /tmp/fancy_message ] && rm /tmp/fancy_message
        main
}

song_info(){
        until [ $state = "update" ]; do
                if [ $count = 20 ]; then
                        count=0
                        [ $mcycle = 3 ] && mcycle=0 || mcycle=`expr $mcycle + 1`
                fi
                if [ $mcycle = 0 ]; then
                        message="  $song"
                        display_text
                        loop
                elif [ $mcycle = 1 ]; then
                        message="‎ﴁ‎  $artist"
                        display_text
                        loop
                elif [ $mcycle = 2 ]; then
                        message="  $album"
                        display_text
                        loop
                 elif [ $mcycle = 3 ]; then
                        message="‎ﮮ‎  $date"
                        display_text
                        loop
             fi
        done
        main
}

loop(){
        while [ $count -lt 20 ] && [ $state != "update" ]; do
                sleep 1
                count=`expr $count + 1`
        done
        return
}

display_text(){
        bspc node $(head -n 1 /tmp/fancy_writing_id) --flag hidden=on
        sleep 0.2
        fg_color=$(sed -n 8p $XDG_CACHE_HOME/wal/colors)

        # this bit would be cleaner if this were a bash script
        length_check=$(echo -n "$message" | wc -c)
        [ $length_check -gt 39 ] && final_message=$(echo "$message" | cut -c 1-36 | sed 's/$/.../g') || final_message="$message"

	convert -size 650x200 xc:"transparent" \
                -gravity center \
                -pointsize 32 \
                -font "Iosevka-Light-Italic-Nerd-Font-Complete" \
                -fill "$fg_color" \
                -annotate +0+65 "$final_message" \
                /tmp/fancy_writing.png > /dev/null 2>&1
        kitty +kitten icat /tmp/fancy_writing.png > /dev/null 2>&1
        sleep 0.2
        bspc node $(head -n 1 /tmp/fancy_writing_id) --flag hidden=off
        return
}

fancy_writing_id=$(xwininfo -root -children | grep -w "fancy writing" | awk '{print $1}')
[ -f /tmp/fancy_writing_id ] || touch /tmp/fancy_writing_id
echo "$fancy_writing_id" > /tmp/fancy_writing_id
main
