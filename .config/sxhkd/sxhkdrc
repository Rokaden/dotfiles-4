# vim:foldmethod=marker

#: launch binds {{{

#: terminal applications {{{

#: kitty
super + Return
    launch_kitty

#: ranger
super + shift + Return
    launch_kitty ranger

#: gotop
super + shift + BackSpace
    launch_gotop

#: ncmpcpp visualizer
super + ctrl + m
    launch_kitty ncmpcpp -c $XDG_CONFIG_HOME/ncmpcpp/config.viz

#: vim
super + k
    launch_vim

#: tremc (transmission front-end)
super + o
    launch_tremc

#: newsboat
super + i
    launch_newsboat

#: }}}

#: rofi/dmenu related {{{

#: dmenu
super + d
    my_dmenu

#: rofi
super + Tab
    my_rofi

#: config menu
super + BackSpace
    config_menu

#: }}}

#: misc {{{

#: browser
super + alt + Return
    $BROWSER

#: run the testscript
super + j
    testscript

#: open transmission web interface
super + shift + o
    qutebrowser localhost:9091

#: private
super + p
    private_script 1
super + shift + p
    private_script 2

#: }}}

#: }}}

#: function binds {{{

#: volume controls {{{

super + F6
    pactl set-sink-mute @DEFAULT_SINK@ toggle
super + {F7,F8}
    pactl set-sink-volume @DEFAULT_SINK@ {-,+}5%

#: }}}

#: music {{{

#: rinse (rofi song select)
super + m
    rinse

#: my playlist
super + alt + m
    toggle_hidden playlist

#: song info notification
super + shift + m
    song_info

#: better random (bypass mpd bias)
super + shift + F12
    better_mpd_random

#: mpd controls
super + {F9,F10,F11,F12}
    mpc -q {toggle,stop,prev,next}
super + shift + F11
    mpc -q seek 0

#: }}}

#: themes {{{

#: random theme
super + n
    theme_change

#: theme selector
super + shift + n
    theme_selector

#: cycle colour palette
super + alt + n
    wpg -z $(wpg -c) && theme_change $(wpg -c)

#: }}}

#: {{{ screen capture

#: scrot
Print
    scrot

#: screen cast
super + Print
    scast

#: end screen cast
super + shift + Print
    kill-scast

#: }}}

#: misc {{{

#: toggle companion kitty
super + shift + Tab
    toggle_hidden companion

#: rofi video menu
super + v
    video_menu

#: toggle visualizer & album art
super + shift + v
    distraction_toggle

#: wifi toggle
super + F2
    wifi_toggle

#: compton toggle
super + shift + F3
    compton_toggle

#: clipboard monitor toggle
super + shift + y
    ace_toggle

#: }}}

#: }}}

#: bspwm binds {{{

#: misc {{{

#: rofi logout/reboot menu
super + shift + q
    exit_menu

#: reinit desktop
super + Escape
    reinit_desktop

#: close/kill
super + {w,q}
    bspc node -{c,k}

#: }}}

#: workspace {{{

#: focus home workspace and layer everything correctly
super + 1
    feng_shui

#: focus or send to the given desktop
super + {_,shift + }{2-9,0}
    bspc {desktop -f,node -d} '{2-9,10}'

#: }}}

#: window {{{

#: resize {{{

# expand a window by moving one of its side outward
super + alt + {Left,Down,Up,Right}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {Left,Down,Up,Right}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + ctrl + shift {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}

#: }}}

# focus/move the node in the given direction
super + {_,shift + }{Left,Down,Up,Right}
	bspc node -{f,s} {west,south,north,east}

#: focus main window or make focused main window
super + {_,alt + } space
    bspc node -{f,s} biggest.local

#: focus floating layer
super + c
    bspc node next.local.floating -f

#: fullscreen toggle
super + shift + space
    alt_fullscreen

#: toggle tiling modes
super + {_,shift + } t
    bspc node -t {tiled,pseudo_tiled}

#: toggle floating mode
super + f
    bspc node -t floating

#: }}}

#: }}}

#: old config (still to be sorted through) {{{

#
# bspwm hotkeys
#

# send the newest marked node to the newest preselected node
#super + y
#	bspc node newest.marked.local -n newest.!automatic.local

#
# state/flags
#

# set the node flags
#super + ctrl + {m,x,y,z}
#	bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#
# focus the node for the given path jump
#super + {p,b,comma,period}
#	bspc node -f @{parent,brother,first,second}

# focus the next/previous node in the current desktop
#super + {_,shift + }c
#	bspc node -f {next,prev}.local

# focus the next/previous desktop in the current monitor
#super + bracket{left,right}
#	bspc desktop -f {prev,next}.local

# focus the last node/desktop
#super + {grave,Tab}
#	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
#super + {o,i}
#	bspc wm -h off; \
#	bspc node {older,newer} -f; \
#	bspc wm -h on

#
# preselect
#

# preselect the direction
#super + ctrl + {h,j,k,l}
#	bspc node -p {west,south,north,east}

# preselect the ratio
#super + ctrl + {1-9}
#	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
#super + ctrl + space
#	bspc node -p cancel

# cancel the preselection for the focused desktop
#super + ctrl + shift + space
#	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#: }}}
